{"version":3,"sources":["Message.js","Conversation.js","DiscoveryResult.js","App.js","index.js"],"names":["Message","props","react_default","a","createElement","className","position","label","message","hasTail","date","Conversation","messageObjectList","map","msgObj","index","src_Message","key","React","isValidElement","components","onSubmit","placeholder","DiscoveryResult","title","preview","href","link","target","linkText","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","context","discoveryNumber","handleSubmit","bind","assertThisInitialized","callWatson","_this2","watsonApiUrl","process","REACT_APP_API_URL","requestJson","JSON","stringify","input","text","fetch","method","headers","Content-Type","Accept","body","then","response","ok","json","responseJson","Date","handleResponse","catch","error","hasOwnProperty","output","action","addMessage","toLocaleTimeString","formatDiscovery","discoveryResults","outputMessage","filter","join","outputIntent","intents","outputDate","outputContext","setState","toConsumableArray","concat","e","inputMessage","value","resultArr","result","formattedResult","src_DiscoveryResult","bodySnippet","sourceUrl","element","document","getElementsByClassName","scrollTop","scrollHeight","scrollToBottom","src_Conversation","Component","ReactDOM","render","src_App_0","getElementById"],"mappings":"8WAmBeA,MAhBf,SAAiBC,GACf,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAA8B,UAAnBJ,EAAMK,SAAuB,8BAAgC,gCAC1EL,EAAMM,OAAQL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkBJ,EAAMM,OACtDL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoBJ,EAAMO,WACxCP,EAAMQ,SACLP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCAGlBJ,EAAMS,MAAOR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiBJ,EAAMS,QC4B3CC,MArCf,SAAsBV,GAepB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACbH,EAAAC,EAAAC,cAAA,WACGH,EAAMW,kBAAkBC,IAjBjC,SAAqBC,EAAQC,GAE3B,MAA8B,kBAAnBD,EAAON,QAEdN,EAAAC,EAAAC,cAACY,EAAD,CAASC,IAAKF,EAAOT,SAAUQ,EAAOR,WAAY,EAAOC,MAAOO,EAAOP,QAAS,EAAOG,KAAMI,EAAOJ,OAAQ,EAAOF,QAASM,EAAON,QAASC,QAASK,EAAOL,UAAW,MAE/JS,IAAMC,eAAeL,EAAON,UAC7BM,EAAON,YAahBN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iCACbH,EAAAC,EAAAC,cAACgB,EAAA,gBAAD,CAAiBf,UAAU,sBAAsBgB,SAAUpB,EAAMoB,SAAUC,YAAY,8BAEzFpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAd,mSClBOkB,MAVf,SAAyBtB,GACvB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiBJ,EAAMuB,OACtCtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAmBJ,EAAMwB,SACxCvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAeH,EAAAC,EAAAC,cAAA,KAAGsB,KAAMzB,EAAM0B,KAAMC,OAAO,UAAU3B,EAAM4B,aC6HjEC,cA/Hb,SAAAA,EAAY7B,GAAO,IAAA8B,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACjBC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMjC,KAEDqC,MAAQ,CACXC,QAAS,GAET3B,kBAAmB,GACnB4B,gBAAiB,GAGnBT,EAAKU,aAAeV,EAAKU,aAAaC,KAAlBV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KACpBA,EAAKa,WAAW,SAXCb,0EAcRvB,GAAS,IAAAqC,EAAAX,KACZY,EAAeC,8CAAYC,kBAC3BC,EAAcC,KAAKC,UAAU,CACjCC,MAAO,CACLC,KAAM7C,GAER+B,QAASL,KAAKI,MAAMC,UAEtB,OAAOe,MAAMR,EACX,CACES,OAAQ,OACRC,QAAS,CACPC,eAAgB,mBAChBC,OAAU,oBAEZC,KAAMV,IAERW,KAAK,SAACC,GACN,IAAKA,EAASC,GACZ,MAAMD,EAER,OAAQA,EAASE,SAEhBH,KAAK,SAACI,GACLA,EAAatD,KAAO,IAAIuD,KACxBpB,EAAKqB,eAAeF,KACnBG,MAAM,SAASC,GAChB,MAAMA,2CAIGJ,GACb,GAAIA,EAAaK,eAAe,WAAaL,EAAaM,OAAOD,eAAe,WAAaL,EAAaM,OAAOC,OAAOF,eAAe,kBACrInC,KAAKsC,WAAY,CAAEjE,MAAO,oBAAqBC,QAAS,uCAAyCE,MAAO,IAAIuD,MAAQQ,uBACpHvC,KAAKwC,gBAAgBV,EAAaM,OAAOK,sBAEpC,CACL,IAAMC,EAAgBZ,EAAaM,OAAOjB,KAAKwB,OAAO,SAAAxB,GAAI,OAAIA,IAAMyB,KAAK,MACnEC,EAAef,EAAagB,QAAQ,GAAKhB,EAAagB,QAAQ,GAArB,OAAoC,GAC7EC,EAAajB,EAAatD,KAAK+D,qBAC/BS,EAAgBlB,EAAazB,QACnCL,KAAKiD,SAAS,CACZ5C,QAAS2C,IAEX,IAAMpE,EAAS,CACbR,SAAU,OACVC,MAAOwE,EACPvE,QAASoE,EACTlE,KAAMuE,EACNxE,SAAS,GAEXyB,KAAKsC,WAAW1D,uCAITA,GACToB,KAAKiD,SAAS,CACZvE,kBAAkBoB,OAAAoD,EAAA,EAAApD,CAAME,KAAKI,MAAM1B,mBAAlByE,OAAA,CAAsCvE,2CAI9CwE,GACX,IAAMC,EAAeD,EAAE1D,OAAO4D,MAGxB1E,EAAS,CACbR,SAAU,QACVE,QAAS+E,EACT7E,MALgB,IAAIuD,MACUQ,qBAK9BhE,SAAS,GAEXyB,KAAKsC,WAAW1D,GAChBwE,EAAE1D,OAAO4D,MAAQ,GACjBtD,KAAKU,WAAW2C,2CAGFE,GASd,OARAA,EAAU5E,IAAI,SAAS6E,EAAQ3E,GAC7B,IAAM4E,EAAkBzF,EAAAC,EAAAC,cAACwF,EAAD,CAAiB3E,IAAK,IAAMiB,KAAKI,MAAME,gBAAkBzB,EAAOS,MAAOkE,EAAOlE,MAAOC,QAASiE,EAAOG,YAAalE,KAAM+D,EAAOI,UAAWjE,SAAU,0BAC5KK,KAAKsC,WAAW,CAAEhE,QAASmF,KAC3BjD,KAAKR,OAEPA,KAAKiD,SAAS,CACZ3C,gBAAiBN,KAAKI,MAAME,gBAAkB,KAExC,2CAIR,IAAMuD,EAAUC,SAASC,uBAAuB,0BAA0B,GAC1EF,EAAQG,UAAYH,EAAQI,0DAI5BjE,KAAKkE,kDAKL,OACElG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uBAAb,oNAGAH,EAAAC,EAAAC,cAACiG,EAAD,CACEhF,SAAUa,KAAKO,aACf7B,kBAAmBsB,KAAKI,MAAM1B,4BAzHtB0F,aCAlBC,IAASC,OAAOtG,EAAAC,EAAAC,cAACqG,EAAD,MAAST,SAASU,eAAe","file":"static/js/main.6c6ea157.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Message.css';\r\n\r\nfunction Message(props) {\r\n  return (\r\n    <div className={props.position === 'right' ? 'message message--from-right' : 'message message--from-left'}>\r\n      {props.label ? <div className=\"message__label\">{props.label}</div> : false}\r\n      <div className=\"message__content\">{props.message}</div>\r\n      {props.hasTail ? (\r\n        <div className=\"message__tail\">\r\n          <div className=\"message__tail-background\"></div>\r\n          <div className=\"message__tail-foreground\"></div>\r\n        </div>\r\n      ) : false}\r\n      {props.date ? <div className=\"message__date\">{props.date}</div> : false}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport './Conversation.css';\r\nimport { InputWithButton } from 'watson-react-components';\r\nimport Message from './Message.js';\r\n\r\nfunction Conversation(props) {\r\n\r\n  function makeMessage(msgObj, index) {\r\n\r\n    if (typeof msgObj.message === 'string') {\r\n      return (\r\n        <Message key={index} position={msgObj.position || false} label={msgObj.label || false} date={msgObj.date || false} message={msgObj.message} hasTail={msgObj.hasTail || false}/>\r\n      );\r\n    } else if ( React.isValidElement(msgObj.message)) {\r\n      return ( msgObj.message );\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"conversation\">\r\n      <div className=\"conversation__messages\">\r\n        <div>\r\n          {props.messageObjectList.map(makeMessage)}\r\n        </div>\r\n      </div>\r\n      <div className=\"conversation__input-container\">\r\n        <InputWithButton className=\"conversation__input\" onSubmit={props.onSubmit} placeholder=\"Say something to Watson.\"/>\r\n      </div>\r\n      <div className=\"conversation__disclaimer--message\">\r\n        <h6 className=\"base--h6\" >\r\n          * This system is for demonstration purposes only and is not intended to process\r\n          Personal Data. No Personal Data is to be entered into this system as it may not\r\n          have the necessary controls in place to meet the requirements of the General Data\r\n          Protection Regulation (EU) 2016/679.\r\n        </h6>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Conversation;\r\n","import React from 'react';\r\nimport './DiscoveryResult.css';\r\n\r\nfunction DiscoveryResult(props) {\r\n  return (\r\n    <div className=\"result\">\r\n      <div className=\"result__title\">{props.title}</div>\r\n      <div className=\"result__preview\">{props.preview}</div>\r\n      <div className=\"result__link\"><a href={props.link} target=\"_blank\">{props.linkText}</a></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DiscoveryResult;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Conversation from './Conversation.js';\r\nimport DiscoveryResult from './DiscoveryResult.js';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      context: {},\r\n      // A Message Object consists of a message[, intent, date, isUser]\r\n      messageObjectList: [],\r\n      discoveryNumber: 0\r\n    };\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.callWatson('hello');\r\n  }\r\n\r\n  callWatson(message) {\r\n    const watsonApiUrl = process.env.REACT_APP_API_URL;\r\n    const requestJson = JSON.stringify({\r\n      input: {\r\n        text: message\r\n      },\r\n      context: this.state.context\r\n    });\r\n    return fetch(watsonApiUrl,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Accept': 'application/json'\r\n        },\r\n        body: requestJson\r\n      }\r\n    ).then((response) => {\r\n      if (!response.ok) {\r\n        throw response;\r\n      }\r\n      return (response.json());\r\n    })\r\n      .then((responseJson) => {\r\n        responseJson.date = new Date();\r\n        this.handleResponse(responseJson);\r\n      }).catch(function(error) {\r\n        throw error;\r\n      });\r\n  }\r\n\r\n  handleResponse(responseJson) {\r\n    if (responseJson.hasOwnProperty('output') && responseJson.output.hasOwnProperty('action') && responseJson.output.action.hasOwnProperty('call_discovery')) {\r\n      this.addMessage( { label: 'Discovery Result:', message: 'Great question. Here\\'s what I found:', date: (new Date()).toLocaleTimeString()});\r\n      this.formatDiscovery(responseJson.output.discoveryResults);\r\n\r\n    } else {\r\n      const outputMessage = responseJson.output.text.filter(text => text).join('\\n');\r\n      const outputIntent = responseJson.intents[0] ? responseJson.intents[0]['intent'] : '';\r\n      const outputDate = responseJson.date.toLocaleTimeString();\r\n      const outputContext = responseJson.context;\r\n      this.setState({\r\n        context: outputContext\r\n      });\r\n      const msgObj = {\r\n        position: 'left',\r\n        label: outputIntent,\r\n        message: outputMessage,\r\n        date: outputDate,\r\n        hasTail: true\r\n      };\r\n      this.addMessage(msgObj);\r\n    }\r\n  }\r\n\r\n  addMessage(msgObj) {\r\n    this.setState({\r\n      messageObjectList: [ ...this.state.messageObjectList , msgObj]\r\n    });\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    const inputMessage = e.target.value;\r\n    const inputDate = new Date();\r\n    const formattedDate = inputDate.toLocaleTimeString();\r\n    const msgObj = {\r\n      position: 'right',\r\n      message: inputMessage,\r\n      date: formattedDate,\r\n      hasTail: true\r\n    };\r\n    this.addMessage(msgObj);\r\n    e.target.value = '';\r\n    this.callWatson(inputMessage);\r\n  }\r\n\r\n  formatDiscovery(resultArr) {\r\n    resultArr.map(function(result, index) {\r\n      const formattedResult = <DiscoveryResult key={'d' + this.state.discoveryNumber + index} title={result.title} preview={result.bodySnippet} link={result.sourceUrl} linkText={'See full manual entry'} />;\r\n      this.addMessage({ message: formattedResult });\r\n    }.bind(this));\r\n\r\n    this.setState({\r\n      discoveryNumber: this.state.discoveryNumber + 1\r\n    });\r\n    return (true);\r\n  }\r\n\r\n  scrollToBottom() {\r\n    const element = document.getElementsByClassName('conversation__messages')[0];\r\n    element.scrollTop = element.scrollHeight;\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.scrollToBottom();\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app-wrapper\">\r\n        <p className=\"conversation__intro\">\r\n                    This demo shows how the Watson Assistant service calls the Discovery service when it does not know how to respond. The calls to Watson Assistant and Discovery are made in OpenWhisk, IBM's serverless platform.\r\n        </p>\r\n        <Conversation\r\n          onSubmit={this.handleSubmit}\r\n          messageObjectList={this.state.messageObjectList}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}